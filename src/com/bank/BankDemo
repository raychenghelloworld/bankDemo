package com.bank.www;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.net.URL;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;


/**
 * simple demmo
 * @author Ray
 *
 */
public class BankDemo {
	
	//init
	private static BigDecimal usd = new BigDecimal(0);
	private static BigDecimal hkd = new BigDecimal(0);
	private static BigDecimal cny = new BigDecimal(0);
	private static boolean f = true;
	
	public static void main(String[] args) {
		
		//new Thread to print the amounts
		new Thread(() -> {
			
			DecimalFormat decimalFormat = new DecimalFormat("0.00");
			while (f) {
				if (usd.intValue() > 0) {
					System.out.println(usd+" "+"美元");
				}
				if (hkd.intValue() > 0) {
					System.out.println("港币"+" "+hkd+" "+"元"+"("+decimalFormat.format(hkd.multiply(new BigDecimal(0.129)))+"美元"+")");
				}
				if (cny.intValue() > 0) {
					System.out.println("CNY"+cny+"("+decimalFormat.format(cny.multiply(new BigDecimal(0.149)))+"美元"+")");
				}
				System.out.println("---------------------");
				if (usd.intValue() <= 0 && hkd.intValue() <= 0 && cny.intValue() <= 0 || f==false) {
					return;
				}
				try {
					Thread.sleep(60000);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
			
		}).start();
		
		//from local file
		URL url = BankDemo.class.getResource("/");
		String path = url.getPath();
		path.replace("file:/", "");
		path.replace("/", "//");
		File file = new File(path+"demo.txt");
		List<String> records = new ArrayList<>();
		try {
			records = getRecordsFromFile(file);
			for (String s : records) {
				checkAndAdd(s);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		//from console
		Scanner sc = new Scanner(System.in);
		while(f) {
			try {
				//其他输入格式请见ReadMe文档
				System.out.println("手动输入：您可以在控制面板输入(e.g: 1000 美元)或者"+"'"+"退出"+"':");
				String str = sc.nextLine();
				if (null == str || "".equals(str)) {
					System.out.println("无效输入，即将退出！");
					return;
				}else {
					checkAndAdd(str);
					}
			}catch (Exception e) {
					e.printStackTrace();
				}
				
			}
		sc.close();//close sc stream;
	}
	

	/**
	 * check the string and add the count to the local value.
	 * @param str
	 */
	private static void checkAndAdd(String str) {
		//remove the blank
		if (str.contains("美元")) {
			String[] spusd = str.split(" ");
			String usdCount = spusd[spusd.length-2];
			BigDecimal usdAdd = usd.add(new BigDecimal(usdCount.trim()));
			usd = usdAdd;
		}else if (str.contains("港币")) {
			String[] spusd = str.split(" ");
			String hkdCount = spusd[1];
			BigDecimal hkdAdd = hkd.add(new BigDecimal(hkdCount));
			hkd = hkdAdd;
		}else if (str.contains("CNY")) {
			String[] spusd = str.split(" ");
			String cnyCount = spusd[1];
			BigDecimal cnyAdd = cny.add(new BigDecimal(cnyCount));
			cny = cnyAdd;
		}else if ("退出".equals(str)) {
			System.out.println("即将退出！");
			f = false;
			return;
		}else {
			System.out.println("无效输入,即将退出!");
			f = false;
			return;
		}
		
		
	}


	/**
	 * read records from local file.
	 * @param file
	 * @return
	 * @throws FileNotFoundException 
	 */
	@SuppressWarnings("resource")
	private static List<String> getRecordsFromFile(File file) throws Exception{
		
		//init return
		ArrayList<String> list = new ArrayList<String>();
		String encoding = "utf-8";
		
		//prepare reader
		BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(file)));
		
		//iter
		String str = null;
		while((str = reader.readLine()) != null) {
			list.add(str);
		}
		
		return list;
	}
}
